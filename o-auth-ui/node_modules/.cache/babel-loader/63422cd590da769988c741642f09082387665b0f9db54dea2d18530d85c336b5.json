{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\o-auth-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [protectedData, setProtectedData] = useState(null);\n  const {\n    instance\n  } = useMsal();\n\n  // Extract token from URL on load\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const jwtToken = urlParams.get(\"token\");\n    if (jwtToken) {\n      localStorage.setItem(\"token\", jwtToken);\n      setToken(jwtToken);\n\n      // Fetch protected data after login\n      fetchProtectedData();\n\n      // Remove token from URL (clean up)\n      window.history.replaceState({}, document.title, \"/\");\n    }\n  }, []);\n  const handleGoogleLogin = () => {\n    window.location.href = \"https://localhost:7104/api/auth/google-login\";\n  };\n  const handleMicrosoftLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup();\n      const accessToken = loginResponse.accessToken;\n      const {\n        data\n      } = await axios.post(\"https://localhost:7104/api/auth/microsoft-callback\", {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      localStorage.setItem(\"token\", data.token);\n      setToken(data.token);\n\n      // Fetch protected data after login\n      fetchProtectedData();\n    } catch (error) {\n      console.error(\"Microsoft Auth Error:\", error);\n    }\n  };\n  const fetchProtectedData = async () => {\n    try {\n      const storedToken = localStorage.getItem(\"token\");\n      if (!storedToken) {\n        console.error(\"No token found, please log in first.\");\n        return;\n      }\n      const {\n        data\n      } = await axios.get(\"https://localhost:7104/api/protected\", {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      });\n      setProtectedData(data.Message);\n    } catch (error) {\n      console.error(\"Protected API Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: !token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OAuth Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMicrosoftLogin,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"Login with Microsoft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: protectedData || \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nHUvo6mt6X+fTl2c/jTj+Tl59lQ=\", false, function () {\n  return [useMsal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMsal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","protectedData","setProtectedData","instance","urlParams","URLSearchParams","window","location","search","jwtToken","get","localStorage","setItem","fetchProtectedData","history","replaceState","document","title","handleGoogleLogin","href","handleMicrosoftLogin","loginResponse","loginPopup","accessToken","data","post","headers","Authorization","error","console","storedToken","getItem","Message","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/harsh/o-auth-ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport axios from \"axios\";\n\nconst App: React.FC = () => {\n  const [token, setToken] = useState<string | null>(null);\n  const [protectedData, setProtectedData] = useState<string | null>(null);\n  const { instance } = useMsal();\n\n  // Extract token from URL on load\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const jwtToken = urlParams.get(\"token\");\n    if (jwtToken) {\n      localStorage.setItem(\"token\", jwtToken);\n      setToken(jwtToken);\n\n      // Fetch protected data after login\n      fetchProtectedData();\n\n      // Remove token from URL (clean up)\n      window.history.replaceState({}, document.title, \"/\");\n    }\n  }, []);\n\n  const handleGoogleLogin = () => {\n    window.location.href = \"https://localhost:7104/api/auth/google-login\";\n  };\n\n  const handleMicrosoftLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup();\n      const accessToken = loginResponse.accessToken;\n\n      const { data } = await axios.post(\n        \"https://localhost:7104/api/auth/microsoft-callback\",\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }\n      );\n\n      localStorage.setItem(\"token\", data.token);\n      setToken(data.token);\n\n      // Fetch protected data after login\n      fetchProtectedData();\n    } catch (error) {\n      console.error(\"Microsoft Auth Error:\", error);\n    }\n  };\n\n  const fetchProtectedData = async () => {\n    try {\n      const storedToken = localStorage.getItem(\"token\");\n      if (!storedToken) {\n        console.error(\"No token found, please log in first.\");\n        return;\n      }\n\n      const { data } = await axios.get(\"https://localhost:7104/api/protected\", {\n        headers: {\n          Authorization: `Bearer ${storedToken}`,\n        },\n      });\n\n      setProtectedData(data.Message);\n    } catch (error) {\n      console.error(\"Protected API Error:\", error);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      {!token ? (\n        <>\n          <h2>OAuth Login</h2>\n          <button onClick={handleGoogleLogin}>Login with Google</button>\n          <button onClick={handleMicrosoftLogin} style={{ marginLeft: \"10px\" }}>\n            Login with Microsoft\n          </button>\n        </>\n      ) : (\n        <h3>{protectedData || \"Loading...\"}</h3>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}