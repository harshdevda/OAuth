{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\o-auth-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useMsal } from \"@azure/msal-react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const {\n    instance\n  } = useMsal();\n  const handleGoogleSuccess = async response => {\n    if (response.credential) {\n      try {\n        const jwt = response.credential;\n        const backendResponse = await axios.post(\"http://localhost:5263/api/auth/google-callback\", {\n          token: jwt\n        });\n        setToken(backendResponse.data.Token);\n      } catch (error) {\n        console.error(\"Google Auth Error:\", error);\n      }\n    }\n  };\n  const handleGoogleFailure = () => {\n    console.error(\"Google Login Failed\");\n  };\n  const handleMicrosoftLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup();\n      const backendResponse = await axios.post(\"http://localhost:5263/api/auth/microsoft-callback\", {\n        token: loginResponse.accessToken\n      });\n      setToken(backendResponse.data.Token);\n    } catch (error) {\n      console.error(\"Microsoft Auth Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OAuth Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleSuccess,\n      onError: handleGoogleFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Microsoft Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMicrosoftLogin,\n      children: \"Login with Microsoft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), token && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"JWT Token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: token,\n        readOnly: true,\n        rows: 5,\n        style: {\n          width: \"80%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IyAWlYDPI0UYs6zKGuv+51Ngk1s=\", false, function () {\n  return [useMsal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleLogin","useMsal","axios","jsxDEV","_jsxDEV","App","_s","token","setToken","instance","handleGoogleSuccess","response","credential","jwt","backendResponse","post","data","Token","error","console","handleGoogleFailure","handleMicrosoftLogin","loginResponse","loginPopup","accessToken","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","onClick","value","readOnly","rows","width","_c","$RefreshReg$"],"sources":["C:/Users/harsh/o-auth-ui/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleLogin, CredentialResponse } from \"@react-oauth/google\";\nimport { useMsal } from \"@azure/msal-react\";\nimport axios from \"axios\";\n\nconst App: React.FC = () => {\n  const [token, setToken] = useState<string | null>(null);\n  const { instance } = useMsal();\n\n  const handleGoogleSuccess = async (response: CredentialResponse) => {\n    if (response.credential) {\n      try {\n        const jwt = response.credential;\n        const backendResponse = await axios.post(\"http://localhost:5263/api/auth/google-callback\", { token: jwt });\n        setToken(backendResponse.data.Token);\n      } catch (error) {\n        console.error(\"Google Auth Error:\", error);\n      }\n    }\n  };\n\n  const handleGoogleFailure = () => {\n    console.error(\"Google Login Failed\");\n  };\n\n  const handleMicrosoftLogin = async () => {\n    try {\n      const loginResponse = await instance.loginPopup();\n      const backendResponse = await axios.post(\"http://localhost:5263/api/auth/microsoft-callback\", {\n        token: loginResponse.accessToken,\n      });\n      setToken(backendResponse.data.Token);\n    } catch (error) {\n      console.error(\"Microsoft Auth Error:\", error);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>OAuth Login</h2>\n\n      <h3>Google Login</h3>\n      <GoogleLogin onSuccess={handleGoogleSuccess} onError={handleGoogleFailure} />\n\n      <h3>Microsoft Login</h3>\n      <button onClick={handleMicrosoftLogin}>Login with Microsoft</button>\n\n      {token && (\n        <div>\n          <h3>JWT Token:</h3>\n          <textarea value={token} readOnly rows={5} style={{ width: \"80%\" }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}